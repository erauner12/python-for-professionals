Chapter_1_Getting_started_with_Python_Language
_1_1_Getting_Started
_1_2_Creating_variables_and_assigning_values
_1_3_Block_Indentation
_1_4_Datatypes
_1_5_Collection_Types
_1_6_IDLE__Python_GUI
_1_7_User_Input
_1_8_Built_in_Modules_and_Functions
_1_9_Creating_a_module
_1_10_Installation_of_Python_2_7_x_and_3_x
_1_11_String_function__str_and_repr
_1_12_Installing_external_modules_using_pip
_1_13_Help_Utility
Chapter_2_Python_Data_Types
_2_1_String_Data_Type
_2_2_Set_Data_Types
_2_3_Numbers_data_type
_2_4_List_Data_Type
_2_5_Dictionary_Data_Type
_2_6_Tuple_Data_Type
Chapter_3_Indentation
_3_1_Simple_example
_3_2_How_Indentation_is_Parsed
_3_3_Indentation_Errors
Chapter_4_Comments_and_Documentation
_4_1_Single_line_inline_and_multiline_comments
_4_2_Programmatically_accessing_docstrings
_4_3_Write_documentation_using_docstrings
Chapter_5_Date_and_Time
_5_1_Parsing_a_string_into_a_timezone_aware_datetime_object
_5_2_Constructing_timezoneaware_datetimes
_5_3_Computing_time_differences
_5_4_Basic_datetime_objects_usage
_5_5_Switching_between_time_zones
_5_6_Simple_date_arithmetic
_5_7_Converting_timestamp_to_datetime
_5_8_Subtracting_months_from_a_date_accurately
_5_9_Parsing_an_arbitrary_ISO_8601_timestamp_with_minimal_libraries
_5_10_Get_an_ISO_8601_timestamp
_5_11_Parsing_a_string_with_a_short_time_zone_name_into_a_timezone_aware_datetime_object
_5_12_Fuzzy_datetime_parsing_extracting_datetime_out_of_a_text
_5_13_Iterate_over_dates
Chapter_6_Date_Formatting
_6_1_Time_between_two_datetimes
_6_2_Outputting_datetime_object_to_string
_6_3_Parsing_string_to_datetime_object
Chapter_7_Enum
_7_1_Creating_an_enum_Python_2_4_through_3_3
_7_2_Iteration
Chapter_8_Set
_8_1_Operations_on_sets
_8_2_Get_the_unique_elements_of_a_list
_8_3_Set_of_Sets
_8_4_Set_Operations_using_Methods_and_Builtins
_8_5_Sets_versus_multisets
Chapter_9_Simple_Mathematical_Operators
_9_1_Division
_9_2_Addition
_9_3_Exponentiation
_9_4_Trigonometric_Functions
_9_5_Inplace_Operations
_9_6_Subtraction
_9_7_Multiplication
_9_8_Logarithms
_9_9_Modulus
Chapter_10_Bitwise_Operators
_10_1_Bitwise_NOT
_10_2_Bitwise_XOR_Exclusive_OR
_10_3_Bitwise_AND
_10_4_Bitwise_OR
_10_5_Bitwise_Left_Shift
_10_6_Bitwise_Right_Shift
_10_7_Inplace_Operations
Chapter_11_Boolean_Operators
_11_1_and__and__or__are_not_guaranteed_to_return_a_boolean
_11_2_A_simple_example
_11_3_Shortcircuit_evaluation
_11_4_and
_11_5_or
_11_6_not
Chapter_12_Operator_Precedence
_12_1_Simple_Operator_Precedence_Examples_in_python
Chapter_13_Variable_Scope_and_Binding
_13_1_Nonlocal_Variables
_13_2_Global_Variables
_13_3_Local_Variables
_13_4_The_del_command
_13_5_Functions_skip_class_scope_when_looking_up_names
_13_6_Local_vs_Global_Scope
_13_7_Binding_Occurrence
Chapter_14_Conditionals
_14_1_Conditional_Expression_or_The_Ternary_Operator
_14_2_if_elif_and_else
_14_3_Truth_Values
_14_4_Boolean_Logic_Expressions
_14_5_Using_the_cmp_function_to_get_the_comparison_result_of_two_objects
_14_6_Else_statement
_14_7_Testing_if_an_object_is_None_and_assigning_it
_14_8_If_statement
Chapter_15_Comparisons
_15_1_Chain_Comparisons
_15_2_Comparison_by__is__vs__==_
_15_3_Greater_than_or_less_than
_15_4_Not_equal_to
_15_5_Equal_To
_15_6_Comparing_Objects
Chapter_16_Loops
_16_1_Break_and_Continue_in_Loops
_16_2_For_loops
_16_3_Iterating_over_lists
_16_4_Loops_with_an_else_clause
_16_5_The_Pass_Statement
_16_6_Iterating_over_dictionaries
_16_7_The_half_loop_dowhile
_16_8_Looping_and_Unpacking
_16_9_Iterating_different_portion_of_a_list_with_different_step_size
_16_10_While_Loop
Chapter_17_Arrays
_17_1_Access_individual_elements_through_indexes
_17_2_Basic_Introduction_to_Arrays
_17_3_Append_any_value_to_the_array_using_append_method
_17_4_Insert_value_in_an_array_using_insert_method
_17_5_Extend_python_array_using_extend_method
_17_6_Add_items_from_list_into_array_using_fromlist_method
_17_7_Remove_any_array_element_using_remove_method
_17_8_Remove_last_array_element_using_pop_method
_17_9_Fetch_any_element_through_its_index_using_index_method
_17_10_Reverse_a_python_array_using_reverse_method
_17_11_Get_array_buffer_information_through_buffer_info_method
_17_12_Check_for_number_of_occurrences_of_an_element_using_count_method
_17_13_Convert_array_to_string_using_tostring_method
_17_14_Convert_array_to_a_python_list_with_same_elements_using_tolist_method
_17_15_Append_a_string_to_char_array_using_fromstring_method
Chapter_18_Multidimensional_arrays
_18_1_Lists_in_lists
_18_2_Lists_in_lists_in_lists_in
Chapter_19_Dictionary
_19_1_Introduction_to_Dictionary
_19_2_Avoiding_KeyError_Exceptions
_19_3_Iterating_Over_a_Dictionary
_19_4_Dictionary_with_default_values
_19_5_Merging_dictionaries
_19_6_Accessing_keys_and_values
_19_7_Accessing_values_of_a_dictionary
_19_8_Creating_a_dictionary
_19_9_Creating_an_ordered_dictionary
_19_10_Unpacking_dictionaries_using_the_**_operator
_19_11_The_trailing_comma
_19_12_The_dict_constructor
_19_13_Dictionaries_Example
_19_14_All_combinations_of_dictionary_values
Chapter_20_List
_20_1_List_methods_and_supported_operators
_20_2_Accessing_list_values
_20_3_Checking_if_list_is_empty
_20_4_Iterating_over_a_list
_20_5_Checking_whether_an_item_is_in_a_list
_20_6_Any_and_All
_20_7_Reversing_list_elements
_20_8_Concatenate_and_Merge_lists
_20_9_Length_of_a_list
_20_10_Remove_duplicate_values_in_list
_20_11_Comparison_of_lists
_20_12_Accessing_values_in_nested_list
_20_13_Initializing_a_List_to_a_Fixed_Number_of_Elements
Chapter_21_List_comprehensions
_21_1_List_Comprehensions
_21_2_Conditional_List_Comprehensions
_21_3_Avoid_repetitive_and_expensive_operations_using_conditional_clause
_21_4_Dictionary_Comprehensions
_21_5_List_Comprehensions_with_Nested_Loops
_21_6_Generator_Expressions
_21_7_Set_Comprehensions
_21_8_Refactoring_filter_and_map_to_list_comprehensions
_21_9_Comprehensions_involving_tuples
_21_10_Counting_Occurrences_Using_Comprehension
_21_11_Changing_Types_in_a_List
_21_12_Nested_List_Comprehensions
_21_13_Iterate_two_or_more_list_simultaneously_within_list_comprehension
Chapter_22_List_slicing_selecting_parts_of_lists
_22_1_Using_the_third_step_argument
_22_2_Selecting_a_sublist_from_a_list
_22_3_Reversing_a_list_with_slicing
_22_4_Shifting_a_list_using_slicing
Chapter_23_groupby
_23_1_Example_4
_23_2_Example_2
_23_3_Example_3
Chapter_24_Linked_lists
_24_1_Single_linked_list_example
Chapter_25_Linked_List_Node
_25_1_Write_a_simple_Linked_List_Node_in_python
Chapter_26_Filter
_26_1_Basic_use_of_filter
_26_2_Filter_without_function
_26_3_Filter_as_shortcircuit_check
_26_4_Complementary_function_filterfalse_ifilterfalse
Chapter_27_Heapq
_27_1_Largest_and_smallest_items_in_a_collection
_27_2_Smallest_item_in_a_collection
Chapter_28_Tuple
_28_1_Tuple
_28_2_Tuples_are_immutable
_28_3_Packing_and_Unpacking_Tuples
_28_4_Builtin_Tuple_Functions
_28_5_Tuple_Are_Elementwise_Hashable_and_Equatable
_28_6_Indexing_Tuples
_28_7_Reversing_Elements
Chapter_29_Basic_Input_and_Output
_29_1_Using_the_print_function
_29_2_Input_from_a_File
_29_3_Read_from_stdin
_29_4_Using_input_and_raw_input
_29_5_Function_to_prompt_user_for_a_number
_29_6_Printing_a_string_without_a_newline_at_the_end
Chapter_30_Files_and_Folders_IO
_30_1_File_modes
_30_2_Reading_a_file_linebyline
_30_3_Iterate_files_recursively
_30_4_Getting_the_full_contents_of_a_file
_30_5_Writing_to_a_file
_30_6_Check_whether_a_file_or_path_exists
_30_7_Random_File_Access_Using_mmap
_30_8_Replacing_text_in_a_file
_30_9_Checking_if_a_file_is_empty
_30_10_Read_a_file_between_a_range_of_lines
_30_11_Copy_a_directory_tree
_30_12_Copying_contents_of_one_file_to_a_different_file
Chapter_31_os_path
_31_1_Join_Paths
_31_2_Path_Component_Manipulation
_31_3_Get_the_parent_directory
_31_4_If_the_given_path_exists
_31_5_check_if_the_given_path_is_a_directory_file_symbolic_link_mount_point_etc
_31_6_Absolute_Path_from_Relative_Path
Chapter_32_Iterables_and_Iterators
_32_1_Iterator_vs_Iterable_vs_Generator
_32_2_Extract_values_one_by_one
_32_3_Iterating_over_entire_iterable
_32_4_Verify_only_one_element_in_iterable
_32_5_What_can_be_iterable
_32_6_Iterator_isnt_reentrant
Chapter_33_Functions
_33_1_Defining_and_calling_simple_functions
_33_2_Defining_a_function_with_an_arbitrary_number_of_arguments
_33_3_Lambda_InlineAnonymous_Functions
_33_4_Defining_a_function_with_optional_arguments
_33_5_Defining_a_function_with_optional_mutable_arguments
_33_6_Argument_passing_and_mutability
_33_7_Returning_values_from_functions
_33_8_Closure
_33_9_Forcing_the_use_of_named_parameters
_33_10_Nested_functions
_33_11_Recursion_limit
_33_12_Recursive_Lambda_using_assigned_variable
_33_13_Recursive_functions
_33_14_Defining_a_function_with_arguments
_33_15_Iterable_and_dictionary_unpacking
_33_16_Defining_a_function_with_multiple_arguments
Chapter_34_Defining_functions_with_list_arguments
_34_1_Function_and_Call
Chapter_35_Functional_Programming_in_Python
_35_1_Lambda_Function
_35_2_Map_Function
_35_3_Reduce_Function
_35_4_Filter_Function
Chapter_36_Partial_functions
_36_1_Raise_the_power
Chapter_37_Decorators
_37_1_Decorator_function
_37_2_Decorator_class
_37_3_Decorator_with_arguments_decorator_factory
_37_4_Making_a_decorator_look_like_the_decorated_function
_37_5_Using_a_decorator_to_time_a_function
_37_6_Create_singleton_class_with_a_decorator
Chapter_38_Classes
_38_1_Introduction_to_classes
_38_2_Bound_unbound_and_static_methods
_38_3_Basic_inheritance
_38_4_Monkey_Patching
_38_5_Newstyle_vs_oldstyle_classes
_38_6_Class_methods_alternate_initializers
_38_7_Multiple_Inheritance
_38_8_Properties
_38_9_Default_values_for_instance_variables
_38_10_Class_and_instance_variables
_38_11_Class_composition
_38_12_Listing_All_Class_Members
_38_13_Singleton_class
_38_14_Descriptors_and_Dotted_Lookups
Chapter_39_Metaclasses
_39_1_Basic_Metaclasses
_39_2_Singletons_using_metaclasses
_39_3_Using_a_metaclass
_39_4_Introduction_to_Metaclasses
_39_5_Custom_functionality_with_metaclasses
_39_6_The_default_metaclass
Chapter_40_String_Formatting
_40_1_Basics_of_String_Formatting
_40_2_Alignment_and_padding
_40_3_Format_literals_fstring
_40_4_Float_formatting
_40_5_Named_placeholders
_40_6_String_formatting_with_datetime
_40_7_Formatting_Numerical_Values
_40_8_Nested_formatting
_40_9_Format_using_Getitem_and_Getattr
_40_10_Padding_and_truncating_strings_combined
_40_11_Custom_formatting_for_a_class
Chapter_41_String_Methods
_41_1_Changing_the_capitalization_of_a_string
_41_2_str_translate_Translating_characters_in_a_string
_41_3_str_format_and_fstrings_Format_values_into_a_string
_41_4_String_modules_useful_constants
_41_5_Stripping_unwanted_leadingtrailing_characters_from_a_string
_41_6_Reversing_a_string
_41_7_Split_a_string_based_on_a_delimiter_into_a_list_of_strings
_41_8_Replace_all_occurrences_of_one_substring_with_another_substring
_41_9_Testing_what_a_string_is_composed_of
_41_10_String_Contains
_41_11_Join_a_list_of_strings_into_one_string
_41_12_Counting_number_of_times_a_substring_appears_in_a_string
_41_13_Case_insensitive_string_comparisons
_41_14_Justify_strings
_41_15_Test_the_starting_and_ending_characters_of_a_string
_41_16_Conversion_between_str_or_bytes_data_and_unicode_characters
Chapter_42_Using_loops_within_functions
_42_1_Return_statement_inside_loop_in_a_function
Chapter_43_Importing_modules
_43_1_Importing_a_module
_43_2_The___all___special_variable
_43_3_Import_modules_from_an_arbitrary_filesystem_location
_43_4_Importing_all_names_from_a_module
_43_5_Programmatic_importing
_43_6_PEP8_rules_for_Imports
_43_7_Importing_specific_names_from_a_module
_43_8_Importing_submodules
_43_9_Reimporting_a_module
_43_10___import___function
Chapter_44_Difference_between_Module_and_Package
_44_1_Modules
_44_2_Packages
Chapter_45_Math_Module
_45_1_Rounding_round_floor_ceil_trunc
_45_2_Trigonometry
_45_3_Pow_for_faster_exponentiation
_45_4_Infinity_and_NaN_not_a_number
_45_5_Logarithms
_45_6_Constants
_45_7_Imaginary_Numbers
_45_8_Copying_signs
_45_9_Complex_numbers_and_the_cmath_module
Chapter_46_Complex_math
_46_1_Advanced_complex_arithmetic
_46_2_Basic_complex_arithmetic
Chapter_47_Collections_module
_47_1_collections_Counter
_47_2_collections_OrderedDict
_47_3_collections_defaultdict
_47_4_collections_namedtuple
_47_5_collections_deque
_47_6_collections_ChainMap
Chapter_48_Operator_module
_48_1_Itemgetter
_48_2_Operators_as_alternative_to_an_infix_operator
_48_3_Methodcaller
Chapter_49_JSON_Module
_49_1_Storing_data_in_a_file
_49_2_Retrieving_data_from_a_file
_49_3_Formatting_JSON_output
_49_4__load__vs__loads___dump__vs__dumps_
_49_5_Calling__json_tool__from_the_command_line_to_prettyprint_JSON_output
_49_6_JSON_encoding_custom_objects
_49_7_Creating_JSON_from_Python_dict
_49_8_Creating_Python_dict_from_JSON
Chapter_50_Sqlite3_Module
_50_1_Sqlite3__Not_require_separate_server_process
_50_2_Getting_the_values_from_the_database_and_Error_handling
Chapter_51_The_os_Module
_51_1_makedirs__recursive_directory_creation
_51_2_Create_a_directory
_51_3_Get_current_directory
_51_4_Determine_the_name_of_the_operating_system
_51_5_Remove_a_directory
_51_6_Follow_a_symlink_POSIX
_51_7_Change_permissions_on_a_file
Chapter_52_The_locale_Module
_52_1_Currency_Formatting_US_Dollars_Using_the_locale_Module
Chapter_53_Itertools_Module
_53_1_Combinations_method_in_Itertools_Module
_53_2_itertools_dropwhile
_53_3_Zipping_two_iterators_until_they_are_both_exhausted
_53_4_Take_a_slice_of_a_generator
_53_5_Grouping_items_from_an_iterable_object_using_a_function
_53_6_itertools_takewhile
_53_7_itertools_permutations
_53_8_itertools_repeat
_53_9_Get_an_accumulated_sum_of_numbers_in_an_iterable
_53_10_Cycle_through_elements_in_an_iterator
_53_11_itertools_product
_53_12_itertools_count
_53_13_Chaining_multiple_iterators_together
Chapter_54_Asyncio_Module
_54_1_Coroutine_and_Delegation_Syntax
_54_2_Asynchronous_Executors
_54_3_Using_UVLoop
_54_4_Synchronization_Primitive_Event
_54_5_A_Simple_Websocket
_54_6_Common_Misconception_about_asyncio
Chapter_55_Random_module
_55_1_Creating_a_random_user_password
_55_2_Create_cryptographically_secure_random_numbers
_55_3_Random_and_sequences_shue_choice_and_sample
_55_4_Creating_random_integers_and_floats_randint_randrange_random_and_uniform
_55_5_Reproducible_random_numbers_Seed_and_State
_55_6_Random_Binary_Decision
Chapter_56_Functools_Module
_56_1_partial
_56_2_cmp_to_key
_56_3_lru_cache
_56_4_total_ordering
_56_5_reduce
Chapter_57_The_dis_module
_57_1_What_is_Python_bytecode?
_57_2_Constants_in_the_dis_module
_57_3_Disassembling_modules
Chapter_58_The_base64_Module
_58_1_Encoding_and_Decoding_Base64
_58_2_Encoding_and_Decoding_Base32
_58_3_Encoding_and_Decoding_Base16
_58_4_Encoding_and_Decoding_ASCII85
_58_5_Encoding_and_Decoding_Base85
Chapter_59_Queue_Module
_59_1_Simple_example
Chapter_60_Deque_Module
_60_1_Basic_deque_using
_60_2_Available_methods_in_deque
_60_3_limit_deque_size
_60_4_Breadth_First_Search
Chapter_61_Webbrowser_Module
_61_1_Opening_a_URL_with_Default_Browser
_61_2_Opening_a_URL_with_Different_Browsers
Chapter_62_tkinter
_62_1_Geometry_Managers
_62_2_A_minimal_tkinter_Application
Chapter_63_pyautogui_module
_63_1_Mouse_Functions
_63_2_Keyboard_Functions
_63_3_Screenshot_And_Image_Recognition
Chapter_64_Indexing_and_Slicing
_64_1_Basic_Slicing
_64_2_Reversing_an_object
_64_3_Slice_assignment
_64_4_Making_a_shallow_copy_of_an_array
_64_5_Indexing_custom_classes___getitem_____setitem___and___delitem__
_64_6_Basic_Indexing
Chapter_65_Plotting_with_Matplotlib
_65_1_Plots_with_Common_Xaxis_but_different_Yaxis
_65_2_Plots_with_common_Yaxis_and_different_Xaxis_using_twiny
_65_3_A_Simple_Plot_in_Matplotlib
_65_4_Adding_more_features_to_a_simple_plot
_65_5_Making_multiple_plots_in_the_same_figure_by_superimposition_similar_to_MATLAB
_65_6_Making_multiple_Plots_in_the_same_figure_using_plot_superimposition_with_separate_plot
commands
Chapter_66_graphtool
_66_1_PyDotPlus
_66_2_PyGraphviz
Chapter_67_Generators
_67_1_Introduction
_67_2_Infinite_sequences
_67_3_Sending_objects_to_a_generator
_67_4_Yielding_all_values_from_another_iterable
_67_5_Iteration
_67_6_The_next_function
_67_7_Coroutines
_67_8_Refactoring_listbuilding_code
_67_9_Yield_with_recursion_recursively_listing_all_files_in_a_directory
_67_10_Generator_expressions
_67_11_Using_a_generator_to_find_Fibonacci_Numbers
_67_12_Searching
_67_13_Iterating_over_generators_in_parallel
Chapter_68_Reduce
_68_1_Overview
_68_2_Using_reduce
_68_3_Cumulative_product
_68_4_Non_shortcircuit_variant_of_anyall
Chapter_69_Map_Function
_69_1_Basic_use_of_map_itertools_imap_and_future_builtins_map
_69_2_Mapping_each_value_in_an_iterable
_69_3_Mapping_values_of_different_iterables
_69_4_Transposing_with_Map_Using_None_as_function_argument_python_2_x_only
_69_5_Series_and_Parallel_Mapping
Chapter_70_Exponentiation
_70_1_Exponentiation_using_builtins
_70_2_Square_root_math_sqrt_and_cmath_sqrt
_70_3_Modular_exponentiation_pow_with_3_arguments
_70_4_Computing_large_integer_roots
_70_5_Exponentiation_using_the_math_module_math_pow
_70_6_Exponential_function_math_exp_and_cmath_exp
_70_7_Exponential_function_minus_1_math_expm1
_70_8_Magic_methods_and_exponentiation_builtin_math_and_cmath
_70_9_Roots_nthroot_with_fractional_exponents
Chapter_71_Searching
_71_1_Searching_for_an_element
_71_2_Searching_in_custom_classes___contains___and___iter__
_71_3_Getting_the_index_for_strings_str_index_str_rindex_and_str_find_str_rfind
_71_4_Getting_the_index_list_and_tuples_list_index_tuple_index
_71_5_Searching_keys_for_a_value_in_dict
_71_6_Getting_the_index_for_sorted_sequences_bisect_bisect_left
_71_7_Searching_nested_sequences
Chapter_72_Sorting_Minimum_and_Maximum
_72_1_Make_custom_classes_orderable
_72_2_Special_case_dictionaries
_72_3_Using_the_key_argument
_72_4_Default_Argument_to_max_min
_72_5_Getting_a_sorted_sequence
_72_6_Extracting_N_largest_or_N_smallest_items_from_an_iterable
_72_7_Getting_the_minimum_or_maximum_of_several_values
_72_8_Minimum_and_Maximum_of_a_sequence
Chapter_73_Counting
_73_1_Counting_all_occurrence_of_all_items_in_an_iterable_collections_Counter
_73_2_Getting_the_most_common_values
_73_3_Counting_the_occurrences_of_one_item_in_a_sequence_list_count_and_tuple_count
_73_4_Counting_the_occurrences_of_a_substring_in_a_string_str_count
_73_5_Counting_occurrences_in_numpy_array
Chapter_74_The_Print_Function
_74_1_Print_basics
_74_2_Print_parameters
Chapter_75_Regular_Expressions_Regex
_75_1_Matching_the_beginning_of_a_string
_75_2_Searching
_75_3_Precompiled_patterns
_75_4_Flags
_75_5_Replacing
_75_6_Find_All_NonOverlapping_Matches
_75_7_Checking_for_allowed_characters
_75_8_Splitting_a_string_using_regular_expressions
_75_9_Grouping
_75_10_Escaping_Special_Characters
_75_11_Match_an_expression_only_in_specific_locations
_75_12_Iterating_over_matches_using__re_finditer_
Chapter_76_Copying_data
_76_1_Copy_a_dictionary
_76_2_Performing_a_shallow_copy
_76_3_Performing_a_deep_copy
_76_4_Performing_a_shallow_copy_of_a_list
_76_5_Copy_a_set
Chapter_77_Context_Managers_“with”_Statement
_77_1_Introduction_to_context_managers_and_the_with_statement
_77_2_Writing_your_own_context_manager
_77_3_Writing_your_own_contextmanager_using_generator_syntax
_77_4_Multiple_context_managers
_77_5_Assigning_to_a_target
_77_6_Manage_Resources
Chapter_78_The___name___special_variable
_78_1___name___==___main__
_78_2_Use_in_logging
_78_3_function_class_or_module___name__
Chapter_79_Checking_Path_Existence_and_Permissions
_79_1_Perform_checks_using_os_access
Chapter_80_Creating_Python_packages
_80_1_Introduction
_80_2_Uploading_to_PyPI
_80_3_Making_package_executable
Chapter_81_Usage_of_pip_module_PyPI_Package_Manager
_81_1_Example_use_of_commands
_81_2_Handling_ImportError_Exception
_81_3_Force_install
Chapter_82_pip_PyPI_Package_Manager
_82_1_Install_Packages
_82_2_To_list_all_packages_installed_using__pip_
_82_3_Upgrade_Packages
_82_4_Uninstall_Packages
_82_5_Updating_all_outdated_packages_on_Linux
_82_6_Updating_all_outdated_packages_on_Windows
_82_7_Create_a_requirements_txt_file_of_all_packages_on_the_system
_82_8_Using_a_certain_Python_version_with_pip
_82_9_Create_a_requirements_txt_file_of_packages_only_in_the_current_virtualenv
_82_10_Installing_packages_not_yet_on_pip_as_wheels
Chapter_83_Parsing_Command_Line_arguments
_83_1_Hello_world_in_argparse
_83_2_Using_command_line_arguments_with_argv
_83_3_Setting_mutually_exclusive_arguments_with_argparse
_83_4_Basic_example_with_docopt
_83_5_Custom_parser_error_message_with_argparse
_83_6_Conceptual_grouping_of_arguments_with_argparse_add_argument_group
_83_7_Advanced_example_with_docopt_and_docopt_dispatch
Chapter_84_Subprocess_Library
_84_1_More_flexibility_with_Popen
_84_2_Calling_External_Commands
_84_3_How_to_create_the_command_list_argument
Chapter_85_setup_py
_85_1_Purpose_of_setup_py
_85_2_Using_source_control_metadata_in_setup_py
_85_3_Adding_command_line_scripts_to_your_python_package
_85_4_Adding_installation_options
Chapter_86_Recursion
_86_1_The_What_How_and_When_of_Recursion
_86_2_Tree_exploration_with_recursion
_86_3_Sum_of_numbers_from_1_to_n
_86_4_Increasing_the_Maximum_Recursion_Depth
_86_5_Tail_Recursion__Bad_Practice
_86_6_Tail_Recursion_Optimization_Through_Stack_Introspection
Chapter_87_Type_Hints
_87_1_Adding_types_to_a_function
_87_2_NamedTuple
_87_3_Generic_Types
_87_4_Variables_and_Attributes
_87_5_Class_Members_and_Methods
_87_6_Type_hints_for_keyword_arguments
Chapter_88_Exceptions
_88_1_Catching_Exceptions
_88_2_Do_not_catch_everything
_88_3_Reraising_exceptions
_88_4_Catching_multiple_exceptions
_88_5_Exception_Hierarchy
_88_6_Else
_88_7_Raising_Exceptions
_88_8_Creating_custom_exception_types
_88_9_Practical_examples_of_exception_handling
_88_10_Exceptions_are_Objects_too
_88_11_Running_cleanup_code_with_finally
_88_12_Chain_exceptions_with_raise_from
Chapter_89_Raise_Custom_Errors__Exceptions
_89_1_Custom_Exception
_89_2_Catch_custom_Exception
Chapter_90_Commonwealth_Exceptions
_90_1_Other_Errors
_90_2_NameError_name_???_is_not_defined
_90_3_TypeErrors
_90_4_Syntax_Error_on_good_code
_90_5_IndentationErrors_or_indentation_SyntaxErrors
Chapter_91_urllib
_91_1_HTTP_GET
_91_2_HTTP_POST
_91_3_Decode_received_bytes_according_to_content_type_encoding
Chapter_92_Web_scraping_with_Python
_92_1_Scraping_using_the_Scrapy_framework
_92_2_Scraping_using_Selenium_WebDriver
_92_3_Basic_example_of_using_requests_and_lxml_to_scrape_some_data
_92_4_Maintaining_webscraping_session_with_requests
_92_5_Scraping_using_BeautifulSoup4
_92_6_Simple_web_content_download_with_urllib_request
_92_7_Modify_Scrapy_user_agent
_92_8_Scraping_with_curl
Chapter_93_HTML_Parsing
_93_1_Using_CSS_selectors_in_BeautifulSoup
_93_2_PyQuery
_93_3_Locate_a_text_after_an_element_in_BeautifulSoup
Chapter_94_Manipulating_XML
_94_1_Opening_and_reading_using_an_ElementTree
_94_2_Create_and_Build_XML_Documents
_94_3_Modifying_an_XML_File
_94_4_Searching_the_XML_with_XPath
_94_5_Opening_and_reading_large_XML_files_using_iterparse_incremental_parsing
Chapter_95_Python_Requests_Post
_95_1_Simple_Post
_95_2_Form_Encoded_Data
_95_3_File_Upload
_95_4_Responses
_95_5_Authentication
_95_6_Proxies
Chapter_96_Distribution
_96_1_py2app
_96_2_cx_Freeze
Chapter_97_Property_Objects
_97_1_Using_the_@property_decorator_for_readwrite_properties
_97_2_Using_the_@property_decorator
_97_3_Overriding_just_a_getter_setter_or_a_deleter_of_a_property_object
_97_4_Using_properties_without_decorators
Chapter_98_Overloading
_98_1_Operator_overloading
_98_2_MagicDunder_Methods
_98_3_Container_and_sequence_types
_98_4_Callable_types
_98_5_Handling_unimplemented_behaviour
Chapter_99_Polymorphism
_99_1_Duck_Typing
_99_2_Basic_Polymorphism
Chapter_100_Method_Overriding
_100_1_Basic_method_overriding
Chapter_101_UserDefined_Methods

_101_1_Creating_userdefined_method_objects
_101_2_Turtle_example
Chapter_102_String_representations_of_class_instances___str___and___repr__methods
_102_1_Motivation
_102_2_Both_methods_implemented_evalroundtrip_style___repr__
Chapter_103_Debugging
_103_1_Via_IPython_and_ipdb
_103_2_The_Python_Debugger_Stepthrough_Debugging_with__pdb_
_103_3_Remote_debugger
Chapter_104_Reading_and_Writing_CSV
_104_1_Using_pandas
_104_2_Writing_a_TSV_file
Chapter_105_Writing_to_CSV_from_String_or_List
_105_1_Basic_Write_Example
_105_2_Appending_a_String_as_a_newline_in_a_CSV_file
Chapter_106_Dynamic_code_execution_with__exec__and__eval_
_106_1_Executing_code_provided_by_untrusted_user_using_exec_eval_or_ast_literal_eval
_106_2_Evaluating_a_string_containing_a_Python_literal_with_ast_literal_eval
_106_3_Evaluating_statements_with_exec
_106_4_Evaluating_an_expression_with_eval
_106_5_Precompiling_an_expression_to_evaluate_it_multiple_times
_106_6_Evaluating_an_expression_with_eval_using_custom_globals
Chapter_107_PyInstaller__Distributing_Python_Code
_107_1_Installation_and_Setup
_107_2_Using_Pyinstaller
_107_3_Bundling_to_One_Folder
_107_4_Bundling_to_a_Single_File
Chapter_108_Data_Visualization_with_Python
_108_1_Seaborn
_108_2_Matplotlib
_108_3_Plotly
_108_4_MayaVI
Chapter_109_The_Interpreter_Command_Line_Console
_109_1_Getting_general_help
_109_2_Referring_to_the_last_expression
_109_3_Opening_the_Python_console
_109_4_The_PYTHONSTARTUP_variable
_109_5_Command_line_arguments
_109_6_Getting_help_about_an_object
Chapter_110
_110_1_Using_**kwargs_when_writing_functions
_110_2_Using_*args_when_writing_functions
_110_3_Populating_kwarg_values_with_a_dictionary
_110_4_Keywordonly_and_Keywordrequired_arguments
_110_5_Using_**kwargs_when_calling_functions
_110_6
_110_7_Using_*args_when_calling_functions
Chapter_111_Garbage_Collection
_111_1_Reuse_of_primitive_objects
_111_2_Effects_of_the_del_command
_111_3_Reference_Counting
_111_4_Garbage_Collector_for_Reference_Cycles
_111_5_Forcefully_deallocating_objects
_111_6_Viewing_the_refcount_of_an_object
_111_7_Do_not_wait_for_the_garbage_collection_to_clean_up
_111_8_Managing_garbage_collection
Chapter_112_Pickle_data_serialisation
_112_1_Using_Pickle_to_serialize_and_deserialize_an_object
_112_2_Customize_Pickled_Data
Chapter_113_Binary_Data
_113_1_Format_a_list_of_values_into_a_byte_object
_113_2_Unpack_a_byte_object_according_to_a_format_string
_113_3_Packing_a_structure
Chapter_114_Idioms
_114_1_Dictionary_key_initializations
_114_2_Switching_variables
_114_3_Use_truth_value_testing
_114_4_Test_for___main___to_avoid_unexpected_code_execution
Chapter_115_Data_Serialization
_115_1_Serialization_using_JSON
_115_2_Serialization_using_Pickle
Chapter_116_Multiprocessing
_116_1_Running_Two_Simple_Processes
_116_2_Using_Pool_and_Map
Chapter_117_Multithreading
_117_1_Basics_of_multithreading
_117_2_Communicating_between_threads
_117_3_Creating_a_worker_pool
_117_4_Advanced_use_of_multithreads
_117_5_Stoppable_Thread_with_a_while_Loop
Chapter_118_Processes_and_Threads
_118_1_Global_Interpreter_Lock
_118_2_Running_in_Multiple_Threads
_118_3_Running_in_Multiple_Processes
_118_4_Sharing_State_Between_Threads
_118_5_Sharing_State_Between_Processes
Chapter_119_Python_concurrency
_119_1_The_multiprocessing_module
_119_2_The_threading_module
_119_3_Passing_data_between_multiprocessing_processes
Chapter_120_Parallel_computation
_120_1_Using_the_multiprocessing_module_to_parallelise_tasks
_120_2_Using_a_Cextension_to_parallelize_tasks
_120_3_Using_Parent_and_Children_scripts_to_execute_code_in_parallel
_120_4_Using_PyPar_module_to_parallelize
Chapter_121_Sockets
_121_1_Raw_Sockets_on_Linux
_121_2_Sending_data_via_UDP
_121_3_Receiving_data_via_UDP
_121_4_Sending_data_via_TCP
_121_5_Multithreaded_TCP_Socket_Server
Chapter_122_Websockets
_122_1_Simple_Echo_with_aiohttp
_122_2_Wrapper_Class_with_aiohttp
_122_3_Using_Autobahn_as_a_Websocket_Factory
Chapter_123_Sockets_And_Message_EncryptionDecryption_Between_Client_and_Server
_559
_123_1_Server_side_Implementation
_123_2_Client_side_Implementation
Chapter_124_Python_Networking
_124_1_Creating_a_Simple_Http_Server
_124_2_Creating_a_TCP_server
_124_3_Creating_a_UDP_Server
_124_4_Start_Simple_HttpServer_in_a_thread_and_open_the_browser
_124_5_The_simplest_Python_socket_clientserver_example
Chapter_125_Python_HTTP_Server
_125_1_Running_a_simple_HTTP_server
_125_2_Serving_files
_125_3_Basic_handling_of_GET_POST_PUT_using_BaseHTTPRequestHandler
_125_4_Programmatic_API_of_SimpleHTTPServer
Chapter_126_Flask
_126_1_Files_and_Templates
_126_2_The_basics
_126_3_Routing_URLs
_126_4_HTTP_Methods
_126_5_Jinja_Templating
_126_6_The_Request_Object
Chapter_127_Introduction_to_RabbitMQ_using_AMQPStorm
_127_1_How_to_consume_messages_from_RabbitMQ
_127_2_How_to_publish_messages_to_RabbitMQ
_127_3_How_to_create_a_delayed_queue_in_RabbitMQ
Chapter_128_Descriptor
_128_1_Simple_descriptor
_128_2_Twoway_conversions
Chapter_129_tempfile_NamedTemporaryFile
_129_1_Create_and_write_to_a_known_persistent_temporary_file
Chapter_130_Input_Subset_and_Output_External_Data_Files_using_Pandas
_130_1_Basic_Code_to_Import_Subset_and_Write_External_Data_Files_Using_Pandas
Chapter_131_Unzipping_Files
_131_1_Using_Python_ZipFile_extractall_to_decompress_a_ZIP_file
_131_2_Using_Python_TarFile_extractall_to_decompress_a_tarball
Chapter_132_Working_with_ZIP_archives
_132_1_Examining_Zipfile_Contents
_132_2_Opening_Zip_Files
_132_3_Extracting_zip_file_contents_to_a_directory
_132_4_Creating_new_archives
Chapter_133_Getting_start_with_GZip
_133_1_Read_and_write_GNU_zip_files
Chapter_134_Stack
_134_1_Creating_a_Stack_class_with_a_List_Object
_134_2_Parsing_Parentheses
Chapter_135_Working_around_the_Global_Interpreter_Lock_GIL
_135_1_Multiprocessing_Pool
_135_2_Cython_nogil
Chapter_136_Deployment
_136_1_Uploading_a_Conda_Package
Chapter_137_Logging
_137_1_Introduction_to_Python_Logging
_137_2_Logging_exceptions
Chapter_138_Web_Server_Gateway_Interface_WSGI
_138_1_Server_Object_Method
Chapter_139_Python_Server_Sent_Events
_139_1_Flask_SSE
_139_2_Asyncio_SSE
Chapter_140_Alternatives_to_switch_statement_from_other_languages
_140_1_Use_what_the_language_offers_the_ifelse_construct
_140_2_Use_a_dict_of_functions
_140_3_Use_class_introspection
_140_4_Using_a_context_manager
Chapter_141_List_destructuring_aka_packing_and_unpacking
_141_1_Destructuring_assignment
_141_2_Packing_function_arguments
_141_3_Unpacking_function_arguments
Chapter_142_Accessing_Python_source_code_and_bytecode
_142_1_Display_the_bytecode_of_a_function
_142_2_Display_the_source_code_of_an_object
_142_3_Exploring_the_code_object_of_a_function
Chapter_143_Mixins
_143_1_Mixin
_143_2_Overriding_Methods_in_Mixins
Chapter_144_Attribute_Access
_144_1_Basic_Attribute_Access_using_the_Dot_Notation
_144_2_Setters_Getters_and_Properties
Chapter_145_ArcPy
_145_1_createDissolvedGDB_to_create_a_file_gdb_on_the_workspace
_145_2_Printing_one_fields_value_for_all_rows_of_feature_class_in_file_geodatabase_using_Search
Cursor
Chapter_146_Abstract_Base_Classes_abc
_146_1_Setting_the_ABCMeta_metaclass
_146_2_WhyHow_to_use_ABCMeta_and_@abstractmethod
Chapter_147_Plugin_and_Extension_Classes
_147_1_Mixins
_147_2_Plugins_with_Customized_Classes
Chapter_148_Immutable_datatypesint_float_str_tuple_and_frozensets
_148_1_Individual_characters_of_strings_are_not_assignable
_148_2_Tuples_individual_members_arent_assignable
_148_3_Frozensets_are_immutable_and_not_assignable
Chapter_149_Incompatibilities_moving_from_Python_2_to_Python_3
_149_1_Integer_Division
_149_2_Unpacking_Iterables
_149_3_Strings_Bytes_versus_Unicode
_149_4_Print_statement_vs_Print_function
_149_5_Differences_between_range_and_xrange_functions
_149_6_Raising_and_handling_Exceptions
_149_7_Leaked_variables_in_list_comprehension
_149_8_True_False_and_None
_149_9_User_Input
_149_10_Comparison_of_different_types
_149_11_.next_method_on_iterators_renamed
_149_12_filter_map_and_zip_return_iterators_instead_of_sequences
_149_13_Renamed_modules
_149_14_Removed_operators_<>_and____synonymous_with_=_and_repr
_149_15_long_vs_int
_149_16_All_classes_are_newstyle_classes_in_Python_3
_149_17_Reduce_is_no_longer_a_builtin
_149_18_AbsoluteRelative_Imports
_149_19_map
_149_20_The_round_function_tiebreaking_and_return_type
_149_21_File_IO
_149_22_cmp_function_removed_in_Python_3
_149_23_Octal_Constants
_149_24_Return_value_when_writing_to_a_file_object
_149_25_exec_statement_is_a_function_in_Python_3
_149_26_encodedecode_to_hex_no_longer_available
_149_27_Dictionary_method_changes
_149_28_Class_Boolean_Value
_149_29_hasattr_function_bug_in_Python_2
Chapter_150_2to3_tool
_150_1_Basic_Usage
Chapter_151_Nonocial_Python_implementations
_151_1_IronPython
_151_2_Jython
_151_3_Transcrypt
Chapter_152_Abstract_syntax_tree
_152_1_Analyze_functions_in_a_python_script
Chapter_153_Unicode_and_bytes
_153_1_Encodingdecoding_error_handling
_153_2_File_IO
_153_3_Basics
Chapter_154_Python_Serial_Communication_pyserial
_154_1_Initialize_serial_device
_154_2_Read_from_serial_port
_154_3_Check_what_serial_ports_are_available_on_your_machine
Chapter_155_Neo4j_and_Cypher_using_Py2Neo
_155_1_Adding_Nodes_to_Neo4j_Graph
_155_2_Importing_and_Authenticating
_155_3_Adding_Relationships_to_Neo4j_Graph
_155_4_Query_1
_155_5_Query_2
_155_6_Cypher_Query_Samples
Chapter_156_Basic_Curses_with_Python
_156_1_The_wrapper_helper_function
_156_2_Basic_Invocation_Example
Chapter_157_Templates_in_python
_157_1_Simple_data_output_program_using_template
_157_2_Changing_delimiter
Chapter_158_Pillow
_158_1_Read_Image_File
_158_2_Convert_files_to_JPEG
Chapter_159_The_pass_statement
_159_1_Ignore_an_exception
_159_2_Create_a_new_Exception_that_can_be_caught
Chapter_160_CLI_subcommands_with_precise_help_output
_160_1_Native_way_no_libraries
_160_2_argparse_default_help_formatter
_160_3_argparse_custom_help_formatter
Chapter_161_Database_Access
_161_1_SQLite
_161_2_Accessing_MySQL_database_using_MySQLdb
_161_3_Connection
_161_4_PostgreSQL_Database_access_using_psycopg2
_161_5_Oracle_database
_161_6_Using_sqlalchemy
Chapter_162_Connecting_Python_to_SQL_Server
_162_1_Connect_to_Server_Create_Table_Query_Data
Chapter_163_PostgreSQL
_163_1_Getting_Started
Chapter_164_Python_and_Excel
_164_1_Read_the_excel_data_using_xlrd_module
_164_2_Format_Excel_files_with_xlsxwriter
_164_3_Put_list_data_into_a_Excels_file
_164_4_OpenPyXL
_164_5_Create_excel_charts_with_xlsxwriter
Chapter_165_Turtle_Graphics
_165_1_Ninja_Twist_Turtle_Graphics
Chapter_166_Python_Persistence
_166_1_Python_Persistence
_166_2_Function_utility_for_save_and_load
Chapter_167_Design_Patterns
167_1_Introduction_to_design_patterns_and_Singleton_Pattern
_167_2_Strategy_Pattern
_167_3_Proxy
Chapter_168_hashlib
_168_1_MD5_hash_of_a_string
_168_2_algorithm_provided_by_OpenSSL
Chapter_169_Creating_a_Windows_service_using_Python
_169_1_A_Python_script_that_can_be_run_as_a_service
_169_2_Running_a_Flask_web_application_as_a_service
Chapter_170_Mutable_vs_Immutable_and_Hashable_in_Python
_170_1_Mutable_vs_Immutable
_170_2_Mutable_and_Immutable_as_Arguments
Chapter_171_configparser
_171_1_Creating_configuration_file_programmatically
_171_2_Basic_usage
Chapter_172_Optical_Character_Recognition
_172_1_PyTesseract
_172_2_PyOCR
Chapter_173_Virtual_environments
_173_1_Creating_and_using_a_virtual_environment
_173_2_Specifying_specific_python_version_to_use_in_script_on_UnixLinux
_173_3_Creating_a_virtual_environment_for_a_different_version_of_python
_173_4_Making_virtual_environments_using_Anaconda
_173_5_Managing_multiple_virtual_environments_with_virtualenvwrapper
_173_6_Installing_packages_in_a_virtual_environment
_173_7_Discovering_which_virtual_environment_you_are_using
_173_8_Checking_if_running_inside_a_virtual_environment
_173_9_Using_virtualenv_with_fish_shell
Chapter_174_Python_Virtual_Environment__virtualenv
_174_1_Installation
_174_2_Usage
_174_3_Install_a_package_in_your_Virtualenv
_174_4_Other_useful_virtualenv_commands
Chapter_175_Virtual_environment_with_virtualenvwrapper
_175_1_Create_virtual_environment_with_virtualenvwrapper
Chapter_176_Create_virtual_environment_with_virtualenvwrapper_in_windows
_176_1_Virtual_environment_with_virtualenvwrapper_for_windows
Chapter_177_sys
_177_1_Command_line_arguments
_177_2_Script_name
_177_3_Standard_error_stream
_177_4_Ending_the_process_prematurely_and_returning_an_exit_code
Chapter_178_ChemPy__python_package
_178_1_Parsing_formulae
_178_2_Balancing_stoichiometry_of_a_chemical_reaction
_178_3_Balancing_reactions
_178_4_Chemical_equilibria
_178_5_Ionic_strength
_178_6_Chemical_kinetics_system_of_ordinary_differential_equations
Chapter_179_pygame
_179_1_Pygames_mixer_module
_179_2_Installing_pygame
Chapter_180_Pyglet
_180_1_Installation_of_Pyglet
_180_2_Hello_World_in_Pyglet
_180_3_Playing_Sound_in_Pyglet
_180_4_Using_Pyglet_for_OpenGL
_180_5_Drawing_Points_Using_Pyglet_and_OpenGL
Chapter_181_Audio
_181_1_Working_with_WAV_files
_181_2_Convert_any_soundfile_with_python_and_ffmpeg
_181_3_Playing_Windows_beeps
_181_4_Audio_With_Pyglet
Chapter_182_pyaudio
_182_1_Callback_Mode_Audio_IO
_182_2_Blocking_Mode_Audio_IO
Chapter_183_shelve
_183_1_Creating_a_new_Shelf
_183_2_Sample_code_for_shelve
_183_3_To_summarize_the_interface_key_is_a_string_data_is_an_arbitrary_object
_183_4_Writeback
Chapter_184_IoT_Programming_with_Python_and_Raspberry_PI
_184_1_Example__Temperature_sensor
Chapter_185_kivy__Crossplatform_Python_Framework_for_NUI_Development
_185_1_First_App
Chapter_186_Pandas_Transform_Preform_operations_on_groups_and_concatenate_the_results
_186_1_Simple_transform
_186_2_Multiple_results_per_group
Chapter_187_Similarities_in_syntax_Differences_in_meaning_Python_vs_JavaScript
_187_1_in_with_lists
Chapter_188_Call_Python_from_C#
_188_1_Python_script_to_be_called_by_C#_application
_188_2_C#_code_calling_Python_script
Chapter_189_ctypes
_189_1_ctypes_arrays
_189_2_Wrapping_functions_for_ctypes
_189_3_Basic_usage
_189_4_Common_pitfalls
_189_5_Basic_ctypes_object
_189_6_Complex_usage
Chapter_190_Writing_extensions
_190_1_Hello_World_with_C_Extension
_190_2_C_Extension_Using_c++_and_Boost
_190_3_Passing_an_open_file_to_C_Extensions
Chapter_191_Python_LexYacc
_191_1_Getting_Started_with_PLY
_191_2_The_Hello_World_of_PLY__A_Simple_Calculator
_191_3_Part_1_Tokenizing_Input_with_Lex
_191_4_Part_2_Parsing_Tokenized_Input_with_Yacc
Chapter_192_Unit_Testing
_192_1_Test_Setup_and_Teardown_within_a_unittest_TestCase
_192_2_Asserting_on_Exceptions
_192_3_Testing_Exceptions
_192_4_Choosing_Assertions_Within_Unittests
_192_5_Unit_tests_with_pytest
_192_6_Mocking_functions_with_unittest_mock_create_autospec
Chapter_193_py_test
_193_1_Setting_up_py_test
_193_2_Intro_to_Test_Fixtures
_193_3_Failing_Tests
Chapter_194_Profiling
_194_1_time_it
_194_2_Using_cProfile_Preferred_Profiler
_194_3_timeit_function
_194_4_timeit_command_line
_194_5_line_profiler_in_command_line
Chapter_195_Python_speed_of_program
_195_1_Deque_operations
_195_2_Algorithmic_Notations
_195_3_Notation
_195_4_List_operations
_195_5_Set_operations
Chapter_196_Performance_optimization
_196_1_Code_profiling
Chapter_197_Security_and_Cryptography
_197_1_Secure_Password_Hashing
_197_2_Calculating_a_Message_Digest
_197_3_Available_Hashing_Algorithms
_197_4_File_Hashing
_197_5_Generating_RSA_signatures_using_pycrypto
_197_6_Asymmetric_RSA_encryption_using_pycrypto
_197_7_Symmetric_encryption_using_pycrypto
Chapter_198_Secure_Shell_Connection_in_Python
_198_1_ssh_connection
Chapter_199_Python_AntiPatterns
_199_1_Overzealous_except_clause
_199_2_Looking_before_you_leap_with_processorintensive_function
Chapter_200_Common_Pitfalls
_200_1_List_multiplication_and_common_references
_200_2_Mutable_default_argument
_200_3_Changing_the_sequence_you_are_iterating_over
_200_4_Integer_and_String_identity
_200_5_Dictionaries_are_unordered
_200_6_Variable_leaking_in_list_comprehensions_and_for_loops
_200_7_Chaining_of_or_operator
_200_8_sys_argv[0]_is_the_name_of_the_file_being_executed
_200_9_Accessing_int_literals_attributes
_200_10_Global_Interpreter_Lock_GIL_and_blocking_threads
_200_11_Multiple_return
_200_12_Pythonic_JSON_keys
Chapter_201_Hidden_Features
_201_1_Operator_Overloading
